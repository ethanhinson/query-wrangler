<?php
// hook into qw_all_contextual_filters()
add_filter('qw_contextual_filters', 'qw_contextual_filter_categories');

/*
 * Add filter to qw_contextual_filters
 */
function qw_contextual_filter_categories($contextual_filters){
  $contextual_filters['categories'] = array(
    'title' => 'Categories',
    'description' => 'Select which categories to accept contexts from, and how to treat those categories.',
    'form_callback' => 'qw_contextual_filter_categories_form',
    'allowed_query_types' => array('page','widget'),

    // allow this contextual_filter to override pages
    'can_override' => true,

    // additional update callback for saving a query
    'query_update_callback' => 'qw_contextual_filter_categories_query_update',

    // modify the override options
    'query_override_options_callback' => 'qw_contextual_filter_categories_override_options',

    // return the appropriate override_id
    'query_override_id_callback' => 'qw_contextual_filter_categories_override_id',

    // which query op should this context act on?
    'query_op' => 'category',
  );
  return $contextual_filters;
}

/*
 * Return override_options for this contextual filter
 */
function qw_contextual_filter_categories_override_options($override_id){

  if ($term = qw_get_term($override_id)){
    $options_override = array();
    // override options
    $options_override['args']['filters']['context_categories']['type'] = 'categories';
    $options_override['args']['filters']['context_categories']['cat_operator'] = 'cat';
    $options_override['args']['filters']['context_categories']['cats'] = array($term->term_id => $term->name);
    return $options_override;
  }
}
/*
 * Return the appropriate override_id by looking for query_vars
 */
function qw_contextual_filter_categories_override_id(){
  $term = get_query_var('category_name');

  // make sure we only have 1
  if(is_array($term)){
     $term = array_pop($term);
  }

  $term = qw_get_term($term, 'slug');
  if(isset($term->term_id)){
    return $term->term_id;
  }
}
/*
 *
 */
function qw_contextual_filter_categories_query_update($contextual_filter){
  // save items to db table if not exists.
  $new_values = array_keys($contextual_filter['values']['cats']);
  qw_update_override_values($contextual_filter, $new_values);
}

/*
 * Filter form
 */
function qw_contextual_filter_categories_form($contextual_filter)
{
  $category_ids = get_all_category_ids();
  ?>
    <div class="qw-checkboxes">
      <?php
        // List all categories as checkboxes
        foreach($category_ids as $cat_id)
        {
          $cat_name = get_cat_name($cat_id);
          $cat_checked = (isset($contextual_filter['values']['cats'][$cat_id])) ? 'checked="checked"' : '';
          ?>
          <label class="qw-query-checkbox">
            <input type="checkbox"
                   name="<?php print $contextual_filter['form_prefix']; ?>[cats][<?php print $cat_id; ?>]"
                   value="<?php print $cat_name; ?>"
                   <?php print $cat_checked; ?> />
            <?php print $cat_name; ?>
          </label>
          <?php
        }
      ?>
    </div>
  <?php
}